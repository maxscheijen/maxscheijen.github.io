<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Max Scheijen - Max Scheijen</title><link>maxscheijen.github.io/</link><description/><atom:link href="maxscheijen.github.io/feeds/max-scheijen.rss.xml" rel="self"/><lastBuildDate>Mon, 15 Sep 2025 00:00:00 +0200</lastBuildDate><item><title>refire - A lightweight retrier</title><link>maxscheijen.github.io/posts/refire-a-lightweight-retrier/</link><description>&lt;p&gt;Failures happen. APIs timeout, flaky network calls fail, and sometimes random conditions causes your code to misbehave. Instead of writing repetitive retry logic in every function, wouldn’t it be better to have a clean, reusable decorator that takes care of retries for you? &lt;/p&gt;
&lt;p&gt;That’s exactly why I built …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Max Scheijen</dc:creator><pubDate>Mon, 15 Sep 2025 00:00:00 +0200</pubDate><guid>tag:None,2025-09-15:maxscheijen.github.io/posts/refire-a-lightweight-retrier/</guid><category>posts</category></item><item><title>vibeflip - A truly random coin flip</title><link>maxscheijen.github.io/posts/vibeflip-a-truly-random-coin-flip/</link><description>&lt;p&gt;I got inspired by &lt;a href="https://github.com/abyesilyurt/vibesort"&gt;&lt;code&gt;vibesort&lt;/code&gt;&lt;/a&gt;. What a nice way to sort a array of numbers. &lt;/p&gt;
&lt;p&gt;Which made me think of what other thinks are hard. A computer creating randomness. Can we maybe leverage LLMs?&lt;/p&gt;
&lt;h2&gt;vibeflip&lt;/h2&gt;
&lt;p&gt;So what is &lt;a href="https://github.com/maxscheijen/vibeflip"&gt;&lt;code&gt;vibeflip&lt;/code&gt;&lt;/a&gt;?&lt;/p&gt;
&lt;p&gt;It's a python library that facilitates a truly random coin flip …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Max Scheijen</dc:creator><pubDate>Sat, 30 Aug 2025 00:00:00 +0200</pubDate><guid>tag:None,2025-08-30:maxscheijen.github.io/posts/vibeflip-a-truly-random-coin-flip/</guid><category>posts</category></item><item><title>Should you be using vim in 2025?</title><link>maxscheijen.github.io/posts/should-you-be-using-vim-in-2025/</link><description>&lt;p&gt;Yes, probably, definitely.&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Max Scheijen</dc:creator><pubDate>Tue, 19 Aug 2025 00:00:00 +0200</pubDate><guid>tag:None,2025-08-19:maxscheijen.github.io/posts/should-you-be-using-vim-in-2025/</guid><category>posts</category></item><item><title>Stop using "git add ."</title><link>maxscheijen.github.io/posts/stop-using-git-add/</link><description>&lt;p&gt;We’ve all done it, &lt;code&gt;git add .&lt;/code&gt;, adding untracked files to the staging area: &lt;code&gt;.env&lt;/code&gt;, &lt;code&gt;TODO&lt;/code&gt;, or who knows what, and then committing them.&lt;/p&gt;
&lt;p&gt;Stop doing that. Instead, use:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;git&lt;span class="w"&gt; &lt;/span&gt;add&lt;span class="w"&gt; &lt;/span&gt;-u
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;This stages only the files that are already tracked by Git.&lt;/p&gt;
&lt;p&gt;The &lt;code&gt;-u&lt;/code&gt; (short for update) flag tells …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Max Scheijen</dc:creator><pubDate>Sat, 16 Aug 2025 00:00:00 +0200</pubDate><guid>tag:None,2025-08-16:maxscheijen.github.io/posts/stop-using-git-add/</guid><category>posts</category></item><item><title>Basic LLM Agent with Tool Calling</title><link>maxscheijen.github.io/posts/basic-llm-agent-with-tool-calling/</link><description>&lt;p&gt;Over the past few years, agents have become a popular topic in the AI community. Many frameworks now allow you to build agents, often serving as abstractions for calling LLMs, parsing inputs, using tools, and chaining calls. However, the basic concept behind a tool-calling agent is straightforward.&lt;/p&gt;
&lt;p&gt;In this post …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Max Scheijen</dc:creator><pubDate>Thu, 08 May 2025 00:00:00 +0200</pubDate><guid>tag:None,2025-05-08:maxscheijen.github.io/posts/basic-llm-agent-with-tool-calling/</guid><category>posts</category></item><item><title>A MCP Server</title><link>maxscheijen.github.io/posts/a-mcp-server/</link><description>&lt;p&gt;Lately, I’ve become increasingly interested in tools for large language models (LLMs), and I started exploring the &lt;a href="https://modelcontextprotocol.io/"&gt;Model Context Protocol&lt;/a&gt; (MCP). In this post, I’ll showcase a simple MCP server I built that allows clients to interact with Yahoo Finance to retrieve stock prices and company information.&lt;/p&gt;
&lt;p&gt;The …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Max Scheijen</dc:creator><pubDate>Fri, 18 Apr 2025 00:00:00 +0200</pubDate><guid>tag:None,2025-04-18:maxscheijen.github.io/posts/a-mcp-server/</guid><category>posts</category></item><item><title>Setting up a VPS on DigitalOcean with Terraform and Tailscale</title><link>maxscheijen.github.io/posts/setting-up-a-vps-on-digitalocean-with-terraform-and-tailscale/</link><description>&lt;p&gt;In this guide, I'll walk you through deploying a secure virtual private server (VPS) on DigitalOcean using Terraform for infrastructure as code and Tailscale for private networking. This approach combines the convenience of cloud infrastructure with enhanced security through private networking.&lt;/p&gt;
&lt;h2&gt;Setting Up Terraform for DigitalOcean&lt;/h2&gt;
&lt;p&gt;First create a &lt;code&gt;secrets …&lt;/code&gt;&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Max Scheijen</dc:creator><pubDate>Sat, 15 Feb 2025 00:00:00 +0100</pubDate><guid>tag:None,2025-02-15:maxscheijen.github.io/posts/setting-up-a-vps-on-digitalocean-with-terraform-and-tailscale/</guid><category>posts</category></item><item><title>Automating Docker Deployment with Github Actions</title><link>maxscheijen.github.io/posts/automating-docker-deployment-with-github-actions/</link><description>&lt;p&gt;As developers, we often need to deploy applications to server environments.&lt;/p&gt;
&lt;p&gt;In this guide, I'll show you how to automate Docker container deployments using &lt;a href="https://github.com/features/actions"&gt;GitHub Actions&lt;/a&gt;, &lt;a href="https://hub.docker.com"&gt;Docker Hub&lt;/a&gt;, and a simple cron job. Whether you're new to Docker or looking to streamline your deployment process, this tutorial will walk you …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Max Scheijen</dc:creator><pubDate>Sat, 18 Jan 2025 00:00:00 +0100</pubDate><guid>tag:None,2025-01-18:maxscheijen.github.io/posts/automating-docker-deployment-with-github-actions/</guid><category>posts</category></item><item><title>Managing tmux sessions with fzf</title><link>maxscheijen.github.io/posts/managing-tmux-sessions-with-fzf/</link><description>&lt;p&gt;Terminal multiplexers like &lt;code&gt;tmux&lt;/code&gt; are essential tools for developers, allowing us to manage multiple terminal sessions efficiently. While &lt;code&gt;tmux&lt;/code&gt; itself is powerful, we can enhance its functionality by combining it with &lt;code&gt;fzf&lt;/code&gt;, the fuzzy finder, to create a more intuitive session management workflow.&lt;/p&gt;
&lt;h2&gt;The Basic Approach&lt;/h2&gt;
&lt;p&gt;The foundation of this …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Max Scheijen</dc:creator><pubDate>Wed, 25 Dec 2024 00:00:00 +0100</pubDate><guid>tag:None,2024-12-25:maxscheijen.github.io/posts/managing-tmux-sessions-with-fzf/</guid><category>posts</category></item><item><title>Azure Functions and FastAPI</title><link>maxscheijen.github.io/posts/azure-functions-and-fastapi/</link><description>&lt;p&gt;I'm a huge fan of &lt;a href="https://fastapi.tiangolo.com"&gt;FastAPI&lt;/a&gt;. It's a high-performance web framework for building APIs in Python, based on type hints and Pydantic, which enables automatic documentation and data validation.&lt;/p&gt;
&lt;p&gt;At work, we extensively use &lt;a href="https://learn.microsoft.com/en-us/azure/azure-functions/"&gt;Azure Functions&lt;/a&gt;. These are serverless resources that reduce the need for infrastructure configuration and maintenance, allowing …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Max Scheijen</dc:creator><pubDate>Sat, 14 Dec 2024 00:00:00 +0100</pubDate><guid>tag:None,2024-12-14:maxscheijen.github.io/posts/azure-functions-and-fastapi/</guid><category>posts</category></item><item><title>How I manage my dotfiles</title><link>maxscheijen.github.io/posts/how-i-manage-my-dotfiles/</link><description>&lt;p&gt;I store all my dotfiles in a dedicated git repository called &lt;code&gt;dotfiles&lt;/code&gt; with a remote on GitHub. This allows me to track changes, and clone and pull them to other machines.&lt;/p&gt;
&lt;p&gt;I then use &lt;code&gt;stow&lt;/code&gt; to create &lt;strong&gt;symlinks&lt;/strong&gt; to place the dotfiles in the appropriate places.&lt;/p&gt;
&lt;p&gt;This creates symlinks from …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Max Scheijen</dc:creator><pubDate>Thu, 28 Nov 2024 00:00:00 +0100</pubDate><guid>tag:None,2024-11-28:maxscheijen.github.io/posts/how-i-manage-my-dotfiles/</guid><category>posts</category></item><item><title>Quickly Reload Your Neovim Config</title><link>maxscheijen.github.io/posts/quickly-reload-your-neovim-config/</link><description>&lt;p&gt;Tired of quitting and restarting Neovim every time you tweak your config? There's a better way!&lt;/p&gt;
&lt;p&gt;By separating your plugin declarations and configurations, you can quickly reload changes without the hassle.&lt;/p&gt;
&lt;p&gt;The key is to put your plugin declarations (everything needed to load the plugin) in one file, and the …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Max Scheijen</dc:creator><pubDate>Mon, 18 Nov 2024 00:00:00 +0100</pubDate><guid>tag:None,2024-11-18:maxscheijen.github.io/posts/quickly-reload-your-neovim-config/</guid><category>posts</category></item><item><title>Supercharge Your Git History Navigation with Fuzzy Find</title><link>maxscheijen.github.io/posts/supercharge-your-git-history-navigation-with-fuzzy-find/</link><description>&lt;p&gt;Ever found yourself scrolling endlessly through &lt;code&gt;git log&lt;/code&gt; trying to find that one specific commit? Let's explore how to transform this tedious process into a smooth, interactive experience using &lt;code&gt;fzf&lt;/code&gt;, a powerful command-line fuzzy finder. This approach will not only make navigating Git history more efficient but also more enjoyable …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Max Scheijen</dc:creator><pubDate>Mon, 11 Nov 2024 00:00:00 +0100</pubDate><guid>tag:None,2024-11-11:maxscheijen.github.io/posts/supercharge-your-git-history-navigation-with-fuzzy-find/</guid><category>posts</category></item><item><title>Search shell history</title><link>maxscheijen.github.io/posts/search-shell-history/</link><description>&lt;p&gt;We've all been there: you type a complex command in your terminal, and a few weeks later, you need it again. Even with autosuggestion enabled, remembering these commands can be tricky. Wouldn't it be nice to quickly search through your terminal history using fuzzy finding?&lt;/p&gt;
&lt;p&gt;Let's build a simple tool …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Max Scheijen</dc:creator><pubDate>Thu, 07 Nov 2024 00:00:00 +0100</pubDate><guid>tag:None,2024-11-07:maxscheijen.github.io/posts/search-shell-history/</guid><category>posts</category></item><item><title>HTML Form and JSON for single endpoint in FastAPI</title><link>maxscheijen.github.io/posts/html-form-and-json-for-single-endpoint-in-fastapi/</link><description>&lt;p&gt;A common challenge when building a FastAPI application is handling different content types, like &lt;code&gt;JSON&lt;/code&gt; and &lt;code&gt;Form&lt;/code&gt; data. Any many cases your API needs to support both formats, especially when dealing with web forms and modern front-end applications that often send json payloads.&lt;/p&gt;
&lt;p&gt;This post demonstrates how to build a …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Max Scheijen</dc:creator><pubDate>Sat, 05 Oct 2024 00:00:00 +0200</pubDate><guid>tag:None,2024-10-05:maxscheijen.github.io/posts/html-form-and-json-for-single-endpoint-in-fastapi/</guid><category>posts</category></item><item><title>VPS 101 - Setup &amp; Security</title><link>maxscheijen.github.io/posts/vps-101-setup-security/</link><description>&lt;p&gt;Recently, I developed an interest in hosting my own servers, which led me to explore virtual private servers (VPS).&lt;/p&gt;
&lt;p&gt;This is the first part of my journey into hosting a Linux server.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href="/posts/vps-101-setup-and-security"&gt;Setup &amp;amp; Security&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;To experiment with hosting my own Linux VPS, I opted for the cheapest &lt;a href="https://www.digitalocean.com/products/droplets"&gt;DigitalOcean Droplet&lt;/a&gt;, priced …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Max Scheijen</dc:creator><pubDate>Fri, 13 Sep 2024 00:00:00 +0200</pubDate><guid>tag:None,2024-09-13:maxscheijen.github.io/posts/vps-101-setup-security/</guid><category>posts</category></item><item><title>Python Development Setup</title><link>maxscheijen.github.io/posts/python-development-setup/</link><description>&lt;p&gt;Recently, I started to center my python development around &lt;a href="https://docs.astral.sh/uv"&gt;&lt;code&gt;uv&lt;/code&gt;&lt;/a&gt; and other tooling  developed by &lt;a href="https://astral.sh/"&gt;astral.sh&lt;/a&gt;. It allows me to manage python environments, linting and formatting.&lt;/p&gt;
&lt;h2&gt;Managing Python Packages using &lt;code&gt;uv&lt;/code&gt;&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;uv&lt;/code&gt; is an extremely fast Python package and recently also became a full on package manager.&lt;/p&gt;
&lt;p&gt;You can …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Max Scheijen</dc:creator><pubDate>Sat, 07 Sep 2024 00:00:00 +0200</pubDate><guid>tag:None,2024-09-07:maxscheijen.github.io/posts/python-development-setup/</guid><category>posts</category></item><item><title>Git Bisect to Find Bugs</title><link>maxscheijen.github.io/posts/git-bisect-to-find-bugs/</link><description>&lt;p&gt;Say you and your team are working on a project. Somewhere in the last 300 commits a bug was introduced.&lt;/p&gt;
&lt;p&gt;You searched through the commit and their messages. But you can't find which commit introduced the bug. Damm what are we going to do...&lt;/p&gt;
&lt;p&gt;This when you can use &lt;code&gt;git …&lt;/code&gt;&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Max Scheijen</dc:creator><pubDate>Wed, 04 Sep 2024 00:00:00 +0200</pubDate><guid>tag:None,2024-09-04:maxscheijen.github.io/posts/git-bisect-to-find-bugs/</guid><category>posts</category></item><item><title>Python to Change VIM</title><link>maxscheijen.github.io/posts/python-to-change-vim/</link><description>&lt;p&gt;The programming language I'm most familiar with is &lt;a href="https://python.org"&gt;python&lt;/a&gt;. I also started to learn vim recently. How can I combine the two?&lt;/p&gt;
&lt;p&gt;I discovered that I can use python (or any programming language for that matter) to manipulate text in vim. You simply need to read from the standard input …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Max Scheijen</dc:creator><pubDate>Thu, 22 Aug 2024 00:00:00 +0200</pubDate><guid>tag:None,2024-08-22:maxscheijen.github.io/posts/python-to-change-vim/</guid><category>posts</category></item><item><title>Remote Access to Homelab using Tailscale</title><link>maxscheijen.github.io/posts/remote-access-to-homelab-using-tailscale/</link><description>&lt;p&gt;For the last year I've been running a small Homelab on a Raspberry Pi 5. It runs a &lt;a href="https://plex.tv/"&gt;Plex Media Server&lt;/a&gt;, &lt;a href="https://home-assistant.io"&gt;Home Assistant&lt;/a&gt;, web servers and some Docker images.&lt;/p&gt;
&lt;p&gt;Until now my Homelab was only accessible from my local network.&lt;/p&gt;
&lt;p&gt;I was hesitant in making my Homelab remotely accessible (port …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Max Scheijen</dc:creator><pubDate>Sun, 18 Aug 2024 00:00:00 +0200</pubDate><guid>tag:None,2024-08-18:maxscheijen.github.io/posts/remote-access-to-homelab-using-tailscale/</guid><category>posts</category></item><item><title>Find and Replace in Vim</title><link>maxscheijen.github.io/posts/find-and-replace-in-vim/</link><description>&lt;p&gt;One of my goals for the remaining part of 2024 is to learn and get comfortable with vim. Both with motions and the editor (NeoVim).&lt;/p&gt;
&lt;p&gt;I started to work with vim about 2 weeks ago and there is so much to learn. However, I think I have some of the …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Max Scheijen</dc:creator><pubDate>Fri, 16 Aug 2024 00:00:00 +0200</pubDate><guid>tag:None,2024-08-16:maxscheijen.github.io/posts/find-and-replace-in-vim/</guid><category>posts</category></item><item><title>Run Custom Scripts From Anywhere</title><link>maxscheijen.github.io/posts/run-custom-scripts-from-anywhere/</link><description>&lt;p&gt;Lately I started to look into creating simple scripts that can automate some tasks for me. So I started looking into shell scripting.&lt;/p&gt;
&lt;p&gt;I wanted to run and have access to these scripts from anywhere in my terminal. After watching a lot of &lt;a href="https://mischavandenburg.com/"&gt;Mischa van den Burg&lt;/a&gt; I started taking …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Max Scheijen</dc:creator><pubDate>Thu, 15 Aug 2024 00:00:00 +0200</pubDate><guid>tag:None,2024-08-15:maxscheijen.github.io/posts/run-custom-scripts-from-anywhere/</guid><category>posts</category></item><item><title>Finding files using the terminal</title><link>maxscheijen.github.io/posts/finding-files-using-the-terminal/</link><description>&lt;p&gt;Finding notes or files on your system can be hard. Where did you put that file? We can use command line tools to search for files.&lt;/p&gt;
&lt;p&gt;One of the easiest ways to find files on your system based on their name is using &lt;code&gt;fd&lt;/code&gt;.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;fd&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;PATTERN&lt;span class="o"&gt;]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;This will return all …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Max Scheijen</dc:creator><pubDate>Wed, 14 Aug 2024 00:00:00 +0200</pubDate><guid>tag:None,2024-08-14:maxscheijen.github.io/posts/finding-files-using-the-terminal/</guid><category>posts</category></item></channel></rss>